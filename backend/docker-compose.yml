services:
  api_service:
    build:
      context: .
      dockerfile: ./api_service/Dockerfile

    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/image_service
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - S3_ENDPOINT_URL=http://minio:9000
      - BUCKET_NAME=dev-bucket
    depends_on:
      db:
          condition: service_started
      kafka:
         condition: service_started
      minio:
        condition: service_started
    volumes:
      - ./.env:/.env
    networks:
      - backend

  worker_service:
    build:
      context: .
      dockerfile: ./worker_service/Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/image_service
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - S3_ENDPOINT_URL=http://minio:9000
      - BUCKET_NAME=dev-bucket
    depends_on:
      - kafka
      - db
      - minio
    networks:
      - backend

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: image_service
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d
    restart: always
    networks:
      - backend

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - backend

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - backend

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - backend

volumes:
  pgdata:
  minio_data:

networks:
  backend:
